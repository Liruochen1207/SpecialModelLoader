plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

sourceSets {
    test {
        resources {
            srcDirs += [
                    'src/test/generated'
            ]
        }
    }
}

loom {
    runs {
        testmodClient {
            client()
            ideConfigGenerated project.rootProject == project
            name = "Testmod Client"
            source sourceSets.test
        }

        testmodDatagen {
            server()

            ideConfigGenerated project.rootProject == project

            name = "Testmod Data"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/test/generated")}"

            runDir "build/datagen"
            source sourceSets.test
        }
    }
}
test.dependsOn runTestmodDatagen

repositories {

}

configurations {
    shadowIn
    modImplementation.extendsFrom shadowIn
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    shadowIn 'de.javagl:obj:0.3.0'
}

shadowJar {
    configurations = [project.configurations.shadowIn]
    classifier "dev-shadow"

    relocate 'de.javagl', 'dev.felnull.specialmodelloader.impl.include.de.javagl'
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
    setArchivesBaseName("${rootProject.archives_base_name}-mc${rootProject.minecraft_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
            pom {
                name = 'SpecialModelLoader'
                description = 'Support for loading special models.'
                developers {
                    developer {
                        id = 'MORIMORI0317'
                        name = 'MORIMORI0317'
                    }
                    developer {
                        id = 'FelNull'
                        name = 'TeamFelNull'
                        email = 'teamfelnull@felnull.dev'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url "https://maven.felnull.dev/"
            credentials {
                username = "felnull"
                password = "${project.maven_put_pass}" != '' ? "${project.maven_put_pass}" : System.getenv('mavenpassword')
            }
        }
    }
}